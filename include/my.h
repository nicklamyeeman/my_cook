/*
** EPITECH PROJECT, 2018
** myh
** File description:
** myh
*/

#ifndef MY_H_
#define MY_H_

#include <SFML/Audio.h>
#include <SFML/Graphics.h>

#define WIDTH	1920
#define HEIGHT	1080

typedef struct s_cook
{
	sfRenderWindow	*w;
	sfVideoMode	mode;
	int		loob;
	int		check;
	int		son;
	int		son2;
	int		sd;
	int		hours;
	int		minutes;
	int		score;
	int		check_for_pause;
	float		volume;
	sfTexture	*me;
	sfSprite	*menu;
	sfTexture	*pau;
	sfSprite	*pause;
	sfEvent		evt;
	sfTexture	*pe;
	sfSprite	*pressenter;
	sfIntRect	rpe;
	sfClock		*cpe;
	sfTime		tpe;
	sfTexture	*ho;
	sfSprite	*home;
	sfText		*f_practice;
	sfText		*f_tutorial;
	sfText		*f_invent;
	sfText		*f_options;
	sfText		*f_quit;
	sfText		*f_tomenu;
	sfText		*f_son;
	sfText		*f_volume;
	sfText		*f_minus;
	sfText		*f_plus;
	sfText		*f_askquit;
	sfText		*f_yes;
	sfText		*f_no;
	sfText		*f_credits;
	sfText		*f_tooptions;
	sfText		*font19;
	sfText		*f_hours;
	sfText		*f_minutes;
	sfText		*f_score;
	sfFont		*police;
	sfMusic		*music;
	sfSprite	*intro1;
	sfTexture	*i1;
	sfSprite	*intro2;
	sfTexture	*i2;
	sfSprite	*inter;
	sfTexture	*in;
	int		skip;
	sfTexture	*ch;
	sfSprite	*check_png;
	sfTexture	*un;
	sfSprite	*uncheck;
	sfTexture	*vol;
	sfSprite	*volume_png;
	sfTexture	*gp;
	sfSprite	*gameplay;
	sfIntRect	rgp;
	sfClock		*cgp;
	sfTime		tgp;
	sfTexture	*py;
	sfSprite	*pyro;
	sfTexture	*cur;
	sfSprite	*crs;
	sfTexture	*fi;
	sfSprite	*fire;
	sfIntRect	rfi;
	sfClock		*cfi;
	sfTime		tfi;
	sfClock		*ctime;
	sfTime		ttime;
	int		brace;
	int		race;
	int		end;
	sfTexture	*hu;
	sfSprite	*human;
	sfTexture	*or;
	sfSprite	*orc;
	sfTexture	*dw;
	sfSprite	*dwarf;
	int		brecipe;
	int		recipe;
	int		inrecipe;
	int		compare;
	sfTexture	*cl;
	sfSprite	*client;
	sfIntRect	rcl;
	sfTexture	*qp;
	sfSprite	*questpyro;
	sfIntRect	rqp;
	sfTexture	*pyco;
	sfSprite	*pyrocommand;
	sfIntRect	rpyco;
	int		evt_bool;
	sfTexture	*pd;
	sfSprite	*pyrodraw;
	sfIntRect	rpd;
	sfTexture	*wgs;
	sfSprite	*wingscommand;
	sfIntRect	rwg;
	sfTexture	*qw;
	sfSprite	*questcw;
	sfIntRect	rqw;
	sfIntRect	rwd;
	sfTexture	*wd;
	sfSprite	*wingsdraw;
	sfIntRect	rbr;
	sfTexture	*br;
	sfSprite	*beercommand;
	sfIntRect	rqb;
	sfTexture	*qb;
	sfSprite	*questbeer;
	sfIntRect	rbd;
	sfTexture	*bd;
	sfSprite	*beerdraw;
	sfIntRect	rroll;
	sfTexture	*roll;
	sfSprite	*rollcommand;
	sfIntRect	rqr;
	sfTexture	*qr;
	sfSprite	*questrolled;
	sfIntRect	rrd;
	sfTexture	*rd;
	sfSprite	*rolleddraw;
	sfTexture	*y;
	sfSprite	*yep;
	sfTexture	*n;
	sfSprite	*nop;
	int		wol;
	sfClock		*crew;
	sfTime		trew;
	sfTexture	*ud;
	sfSprite	*undead;
	sfTexture	*ne;
	sfSprite	*night_elf;
	sfTexture	*pa;
	sfSprite	*pandaren;
	sfTexture	*ta;
	sfSprite	*tauren;
	int		rewards;
	sfIntRect	rinv;
	sfTexture	*inv;
	sfSprite	*inventory;
	sfTexture	*next_p;
	sfSprite	*next_page;
	sfTexture	*next_p_r;
	sfSprite	*next_page_r;
	sfTexture	*next_p_l;
	sfSprite	*next_page_l;
	int		arrow;
	sfIntRect	rhtp;
	sfTexture	*htp;
	sfSprite	*howtoplay;
	int		arrow_htp;
	sfTexture	*cre;
	sfSprite	*credits;
	sfTexture	*end_od;
	sfSprite	*endofday;
}	cook_t;

sfVector2f	v2f(float, float);
sfIntRect	int_rect(int, int, int, int);
int	my_strlen(char const *);
char	*int_to_char(int);
char	*my_revstr(char *);
int	my_strcmp(char *, char *);
void	in_tuto(cook_t *);
void	practice(cook_t *);
void	reset(cook_t *);
void	reset2(cook_t *);
void	main_page(cook_t *);
void	home_page(cook_t *);
void	practice_page(cook_t *);
void	option_page(cook_t *, int *);
void	pause_page(cook_t *);
void	in_practice(cook_t *);
void	in_option(cook_t *);
void	in_quit(cook_t *);
void	in_pause(cook_t *);
void	in_quit_ingame(cook_t *);
void	set_inventory(cook_t *);
void	after_home(cook_t *);
void	pressenter(cook_t *);
void	destroy(cook_t *);
void	cook_event(cook_t *);
void	event_mainpage(cook_t *);
void	create_textnspri(cook_t *);
void	create_fontnmusic(cook_t *);
void	textn_sprite(cook_t);
void	font_inventory(cook_t *);
void	font_home(cook_t *);
void	font_practice(cook_t *);
void	font_option(cook_t *);
void	in_inventory(cook_t *);
void	set_practice(cook_t *);
void	set_option(cook_t *);
void	inventory_page(cook_t *);
void	create_rect(cook_t *);
void	init_values(cook_t *);
void	init_values2(cook_t *);
void	event_inventory(cook_t *);
void	check_forvisual(cook_t *);
void	visualstate_home1(cook_t *);
void	visualstate_home2(cook_t *);
void	visualstate_practice(cook_t *);
void	reset_color(cook_t *);
void	introduction(cook_t *);
void	visualstate_quit(cook_t *);
void	visualstate_options(cook_t *);
void	visualstate_options2(cook_t *);
void	in_quit(cook_t *);
void	set_quit(cook_t *);
void	font_quit(cook_t *);
void	font_pause(cook_t *);
void	quit_page(cook_t *);
void	quit_page_ingame(cook_t *);
void	timer_in_game(cook_t *);
void	credits_page(cook_t *);
void	set_home(cook_t *);
void	set_pause(cook_t *);
void	font_credits(cook_t *);
void	set_credits(cook_t *);
void	in_credits(cook_t *);
void	page(cook_t *, int *);
void	build_home(cook_t *);
void	build_pause(cook_t *);
void	build_option(cook_t *, int *);
void	build_credits(cook_t *);
void	build_quit(cook_t *);
void	build_practice(cook_t *);
void	build_inventory(cook_t *);
void	create_clock(cook_t *);
void	during_gameplay(cook_t *);
void	pyrocotelette(cook_t *);
void	humans(cook_t *);
void	orcs(cook_t *);
void	dwarfs(cook_t *);
void	pop_character(cook_t *);
void	traitment(cook_t *);
void	event_practice(cook_t *);
char	*check_env(char **);
void	wings(cook_t *);
void	beer(cook_t *);
void	rolled(cook_t *);
void	undead(cook_t *);
void	tauren(cook_t *);
void	pandaren(cook_t *);
void	night_elf(cook_t *);
void	textn_sprite2(cook_t);
void	beer_ispressed(cook_t *, int *);
void	pyroco_event(cook_t *);
void	wings_event(cook_t *);
void	rolled_event(cook_t *);
void	create_rect2(cook_t *);
void	end_game(cook_t *);
void	build_howtoplay(cook_t *);
void	set_tutorial(cook_t *);
void	tuto_page(cook_t *);
void	font_tutorial(cook_t *);
void	create_font(cook_t *);
int	my_putstr(char *);
void	starting_game();

#endif /*MY_H_*/
